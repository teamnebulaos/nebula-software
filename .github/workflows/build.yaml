name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g. v1.0.0)'
        required: false
        default: ''

permissions:
  contents: write
  packages: write
  actions: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO_PAT: ${{ secrets.REPO_PAT }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:base-devel

    steps:
      - name: Install git
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git

      - name: Configure git
        run: |
          git config --global --add safe.directory /__w/nebula-software/nebula-software
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=v$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: |
          pacman -S --noconfirm meson ninja gtk4 libadwaita python python-gobject python-requests

      - name: Build package
        run: |
          chmod -R 777 .
          useradd builder -m
          chown -R builder:builder .
          su builder -c 'makepkg -s --noconfirm'

      - name: Create tag
        if: github.event.inputs.version != ''
        run: |
          cd /__w/nebula-software/nebula-software
          git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            *.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}

      - name: Trigger Repo Update
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ env.REPO_PAT }}
          repository: teamnebulaos/repo
          event-type: package-updated
          client-payload: '{"package": "nebula-software", "version": "${{ env.VERSION }}"}'
